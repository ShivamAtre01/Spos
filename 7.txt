-- 1. Create a View1 to display List all customers in alphabetical order who have a loan from Pune_Station branch.
CREATE VIEW View1 AS
SELECT DISTINCT C.cust_name
FROM Customer C
JOIN Borrower B ON C.cust_name = B.cust_name
JOIN Loan L ON B.loan_no = L.loan_no
WHERE L.branch_name = 'Pune_Station'
ORDER BY C.cust_name;

-- 2. Create View2 on the branch table by selecting any two columns and perform insert, update, delete operations.
CREATE VIEW View2 AS
SELECT branch_name, branch_city
FROM Branch;

-- Perform insert operation on View2
INSERT INTO View2 VALUES ('New_Branch', 'New_City');

-- Perform update operation on View2
UPDATE View2
SET branch_city = 'Updated_City'
WHERE branch_name = 'New_Branch';

-- Perform delete operation on View2
DELETE FROM View2
WHERE branch_name = 'New_Branch';

-- 3. Create View3 on the borrower and depositor table by selecting any one column from each table and perform insert, update, delete operations.
CREATE VIEW View3 AS
SELECT B.cust_name
FROM Borrower B
JOIN Depositor D ON B.cust_name = D.cust_name;

-- Perform insert operation on View3
INSERT INTO View3 VALUES ('New_Customer');

-- Perform update operation on View3
UPDATE View3
SET cust_name = 'Updated_Customer'
WHERE cust_name = 'New_Customer';

-- Perform delete operation on View3
DELETE FROM View3
WHERE cust_name = 'Updated_Customer';

-- 4. Create Union of left and right join for all customers who have an account or loan or both at the bank.
CREATE VIEW UnionView AS
SELECT C.cust_name, A.branch_name, B.loan_no
FROM Customer C
LEFT JOIN Depositor D ON C.cust_name = D.cust_name
LEFT JOIN Account A ON D.acc_no = A.Acc_no
LEFT JOIN Borrower B ON C.cust_name = B.cust_name
UNION
SELECT C.cust_name, A.branch_name, B.loan_no
FROM Customer C
RIGHT JOIN Borrower B ON C.cust_name = B.cust_name
RIGHT JOIN Loan L ON B.loan_no = L.loan_no
RIGHT JOIN Account A ON A.Acc_no = D.acc_no;

-- 5. Create Simple and Unique index on the Customer table.
CREATE UNIQUE INDEX idx_cust_name ON Customer(cust_name);

-- 6. Display index information.
SHOW INDEX FROM Customer;
