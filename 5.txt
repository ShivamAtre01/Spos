-- Create tables with appropriate constraints

CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    employee_name VARCHAR(50) NOT NULL,
    street VARCHAR(100),
    city VARCHAR(50)
);

CREATE TABLE Works (
    employee_name VARCHAR(50),
    company_name VARCHAR(50),
    salary DECIMAL(10, 2),
    PRIMARY KEY (employee_name, company_name),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name),
    FOREIGN KEY (company_name) REFERENCES Company(company_name)
);

CREATE TABLE Company (
    company_name VARCHAR(50) PRIMARY KEY,
    city VARCHAR(50),
    assets DECIMAL(12, 2)
);

CREATE TABLE Manages (
    employee_name VARCHAR(50),
    manager_name VARCHAR(50),
    PRIMARY KEY (employee_name),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name),
    FOREIGN KEY (manager_name) REFERENCES Employee(employee_name)
);

-- Queries

-- 1. Find the names of all employees who work for 'TCS'.
SELECT employee_name
FROM Works
WHERE company_name = 'TCS';

-- 2. Find the names and company names of all employees sorted in ascending order of company name
--    and descending order of employee names of that company.
SELECT employee_name, company_name
FROM Works
ORDER BY company_name ASC, employee_name DESC;

-- 3. Change the city of the employee working with InfoSys to 'Bangalore'.
UPDATE Employee
SET city = 'Bangalore'
WHERE employee_name IN (SELECT employee_name FROM Works WHERE company_name = 'InfoSys');

-- 4. Find the names, street address, and cities of residence for all employees who work for 'TechM' and earn more than $10,000.
SELECT E.employee_name, E.street, E.city
FROM Employee E
JOIN Works W ON E.employee_name = W.employee_name
WHERE W.company_name = 'TechM' AND W.salary > 10000;

-- 5. Add Column Asset to Company table.
ALTER TABLE Company
ADD COLUMN assets DECIMAL(12, 2);
